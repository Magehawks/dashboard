{# templates/score_board/index.html.twig #}

{% extends 'base.html.twig' %}

{% block body %}
    <div class="container">
        <h1>Game Records of {{ game.name }}</h1>

        <!-- Category Filter Dropdown -->
        <div class="mb-3">
            <select id="categoryFilter" class="form-control">
                <option value="">All Categories</option>
                {% for category in categories %}
                    <option value="{{ category.id }}">{{ category.name }}</option>
                {% endfor %}
            </select>
        </div>


        <a href="{{ path('score_board_new', {'gameId': gameId}) }}" class="btn btn-primary">Create Record</a>
        <div id="categoryRules"></div>
        <div id="categoryDescription"></div>
        <!-- Records Table -->
        <table class="table" id="recordsTable">
            <thead>
            <tr>
                <th>Place</th>
                <th>Player</th>
                <th>Nation</th>
                <th>Points</th>
                <th>Category</th>
                <th>Time</th>
                <th>Video Link</th>
            </tr>
            </thead>
            <tbody>
            {% for record in records %}
                <tr>
                    <td>
                        {# Medal Display #}
                        {% if loop.index == 1 %}
                            <img src="/images/medal_1.png" alt="Gold Medal" class="medal">
                        {% elseif loop.index == 2 %}
                            <img src="/images/medal_2.png" alt="Silver Medal" class="medal">
                        {% elseif loop.index == 3 %}
                            <img src="/images/medal_3.png" alt="Bronze Medal" class="medal">
                        {% else %}
                            <span class="medal-placeholder"></span> {# Placeholder for alignment #}
                        {% endif %}
                    </td>
                    <td>
                        <div class="player-name">
                            {# Existing Player Display Logic #}
                            {% if record.player.isRegistered %}
                                <div class="badge"><img src="/images/member-removebg.png" alt="badge"></div>
                            {% endif %}
                            {% if record.player.isSupport %}
                                <div class="is-support" data-username="{{ record.player.username | e('html_attr') }}"></div>
                            {% else %}
                                {{ record.player.username }}
                            {% endif %}
                        </div>
                    </td>
                    <td><span class="fi fi-{{ record.player.livingCountry|lower }}"></span></td>
                    <td>{{ record.points }}</td>
                    <td>{{ record.category.name }}</td>
                    <td>{{ record.time ? record.time|date('H:i:s') : '' }}</td>
                    <td>
                        {% if record.link starts with 'http://' or record.link starts with 'https://' %}
                            <a href="{{ record.link }}" target="_blank">{{ record.link }}</a>
                        {% else %}
                            <a href="http://{{ record.link }}" target="_blank">{{ record.link }}</a>
                        {% endif %}
                    </td>
                </tr>
            {% else %}
                <tr>
                    <td colspan="5">No records found.</td>
                </tr>
            {% endfor %}
            </tbody>
        </table>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script>
        $(document).ready(function() {
            $('#categoryFilter').change(function() {
                var selectedCategory = $(this).val();
                $.ajax({
                    url: '/scoreboard/game/' + '{{ gameId }}' + '/records/filter',
                    type: 'GET',
                    data: { categoryId: selectedCategory },
                    success: function(response) {
                        // Assuming 'response' is now a JSON object
                        $('#recordsTable tbody').html(response.html);

                        // Update rules and description
                        if (response.rules || response.description) {
                            $('#categoryRules').html('<h3>Rules for the Category ' + response.categoryName + '</h3>' + response.rules);
                            $('#categoryDescription').html('<h3>Description for the Category ' + response.categoryName + '</h3>' + response.description);
                        } else {
                            $('#categoryRules').empty();
                            $('#categoryDescription').empty();
                        }
                    }
                });
            });
        });
        document.querySelectorAll('.is-support').forEach(function(element) {
            const username = element.getAttribute('data-username');
            const spans = [...username].map((letter, index) => `<span class="animated-letter" style="animation-delay: ${index * 0.1}s;">${letter}</span>`).join('');
            element.innerHTML = spans;
        });
    </script>
{% endblock %}
